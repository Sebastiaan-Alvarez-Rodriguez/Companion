buildscript {
    ext {
        app_version = '1.3.2-SNAPSHOT'
        kotlin_version = '1.6.21'
        android_kt_core_version = '1.8.0'
        compose_version = '1.2.0-beta03'
        paging_version = '3.1.1'
        room_version = '2.4.2'
        timber_version = '5.0.1'
        markwon_version = '4.6.2'

        android_java_version_src = JavaVersion.VERSION_11
        android_java_version_target = JavaVersion.VERSION_11

        kotlin_jvm_target = android_java_version_target.toString()

        kotlin_performance_args = []
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

// configure repositories for all projects
allprojects {
    repositories {
        maven {
            name = "GitHubPackages"
            url "https://maven.pkg.github.com/Sebastiaan-Alvarez-Rodriguez/parquet-android"
            credentials {
                String _user = null
                String _token = null
                File propertiesFile = project.rootProject.file('local.properties')
                if (propertiesFile.isFile()) {
                    Properties properties = new Properties()
                    properties.load(propertiesFile.newDataInputStream())
                    _user = properties.getProperty("gpr.user")
                    _token = properties.getProperty("gpr.token")
                }
                username = _user ?: System.getenv("USERNAME")
                password = _token ?: System.getenv("TOKEN")

                if (username == null || password == null)
                    throw RuntimeException("""
username="$username", token="$password"
Did you provide a github token? This is (sadly) required. Please see the docs.
""")
                // Github presents packages using a maven interface.
                // Sadly, they force us to provide a stupid token to download a package from this interface,
                // even when repo is publicly available.
                // The token requires only the read:package permission.
                // NEVER publish tokens online.
                // Always place these tokens in environment variables (which are not accidentally pushed),
                // or in files that are explicitly not published (e.g. /local.properties).
                // Once Github fixes this needless token access for public repo packages, we will remove this.
            }
        }
        google()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def addPropertyOrEnv(String propertyKey, String envKey) {
    File propertiesFile = project.rootProject.file('local.properties')
    if (propertiesFile.isFile()) {
        Properties properties = new Properties()
        properties.load(propertiesFile.newDataInputStream())
        return addPropertyOrEnv(properties, propertyKey, envKey)
    }
    return null
}

static def addPropertyOrEnv(Properties properties, String propertyKey, String envKey) {
    return properties.getProperty(propertyKey) ?: System.getenv(envKey)
}